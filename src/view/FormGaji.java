/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view;

import java.awt.Point;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ari Awaludin
 */
public class FormGaji extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormGaji
     */
    public FormGaji() {
        initComponents();
        
        gajiDeafultModel =(DefaultTableModel) gajiTable.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pekerjaanPopupMenu = new javax.swing.JPopupMenu();
        tambahMenuItem = new javax.swing.JMenuItem();
        hapusMenuItem = new javax.swing.JMenuItem();
        namaTextField = new javax.swing.JTextField();
        ktpTextField = new javax.swing.JTextField();
        ruangTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lihatButton = new javax.swing.JButton();
        hapusButton = new javax.swing.JButton();
        simpanButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        gajiTable = new javax.swing.JTable();

        tambahMenuItem.setText("jMenuItem2");
        tambahMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahMenuItemActionPerformed(evt);
            }
        });
        pekerjaanPopupMenu.add(tambahMenuItem);

        hapusMenuItem.setText("jMenuItem3");
        hapusMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusMenuItemActionPerformed(evt);
            }
        });
        pekerjaanPopupMenu.add(hapusMenuItem);

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mengelola Gaji Karyawan", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        namaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaTextFieldActionPerformed(evt);
            }
        });

        ktpTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ktpTextFieldActionPerformed(evt);
            }
        });
        ktpTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ktpTextFieldKeyPressed(evt);
            }
        });

        ruangTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ruangTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("Ktp");

        jLabel2.setText("Nama");

        jLabel3.setText("Ruang");

        lihatButton.setText("Lihat");
        lihatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lihatButtonActionPerformed(evt);
            }
        });

        hapusButton.setText("Tutup");
        hapusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusButtonActionPerformed(evt);
            }
        });

        simpanButton.setText("Simpan");
        simpanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanButtonActionPerformed(evt);
            }
        });

        jScrollPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jScrollPane2MouseReleased(evt);
            }
        });

        gajiTable.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Gaji"), "Gaji"), "Gaji", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION), "Gaji"));
        gajiTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode", "Nama Pekerjaan", "Gaji Bersih", "Gaji Kotor", "Tunjangan"
            }
        ));
        gajiTable.setToolTipText("");
        gajiTable.setName("gajiTable"); // NOI18N
        gajiTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                gajiTableMouseReleased(evt);
            }
        });
        gajiTable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                gajiTablePropertyChange(evt);
            }
        });
        gajiTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                gajiTableKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(gajiTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel1)
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(namaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(hapusButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ktpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lihatButton)
                        .addGap(84, 84, 84)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ruangTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(simpanButton)))
                .addGap(46, 46, 46))
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ktpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(ruangTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lihatButton)
                    .addComponent(simpanButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hapusButton)
                    .addComponent(namaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(52, 52, 52)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void setKtp(String ktp) {
        ktpTextField.setText(ktp);
    }
    
    public void setNama (String nama) {
        namaTextField.setText(nama);
    }
    
    public void setRuang (String ruang) {
        ruangTextField.setText(ruang);
    }
    
    public void setNamaPekerjaan(String nama) {
        gajiTable.setValueAt(nama, gajiTable.getSelectedRow(),1);
    }
    
    public void hapusGaji () {
        for (int i=2; i<=4; i++) {
            gajiTable.setValueAt("", gajiTable.getSelectedRow(), i);
        }
    }
    
    public void setTableGaji(Object[] gajiPekerjaan) {
        int noRecord;
        
        if((noRecord = gajiDeafultTableModel.getRowCount()-1) >=0) {
            while (((gajiTable.getValueAt(noRecord, 0) == null) || gajiTable.getValueAt(noRecord,0).equals("")) && (noRecord > 0)){
                noRecord++;
            }
            if(!((gajiTable.getValueAt(noRecord,0) ==null ) || gajiTable.getValueAt(noRecord,0).equalas(""))) {
                if(noRecord<gajiDeafultTableModel.getRowCount()) {
                    gajiDefaultTableModel.RemoveRow(noRecord--);
                }
            }else {
                noRecord--;
            }
        }
        
        gajiDefaultTableModel.insertRow(++noRecord, gajiPekerjaan);
    }
    
    public void clearGajiTable() {
        gajiDefaultTableModel.setRowCount(0);
    }
    
    private void klikKananTable(java.awt.event.MouseEvent evt) {
        if(evt.isPopupTrigger()) {
            pekerjaanPopupMenu.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }
    
    private void namaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaTextFieldActionPerformed

    private void ktpTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ktpTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ktpTextFieldActionPerformed

    private void ruangTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ruangTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ruangTextFieldActionPerformed

    private void lihatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lihatButtonActionPerformed
        // TODO add your handling code here:
        gajiController.tampilkanFormLihatKaryawan();
    }//GEN-LAST:event_lihatButtonActionPerformed

    private void hapusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusButtonActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_hapusButtonActionPerformed

    private void simpanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanButtonActionPerformed
        // TODO add your handling code here:
        gajiController.simpan(ktpTextField, gajiTable);
    }//GEN-LAST:event_simpanButtonActionPerformed

    private void gajiTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gajiTableMouseReleased
        // TODO add your handling code here:
        Point p = evt.getPoint();
        int rowNumber = gajiTable.rowAtPoint(p);
        ListSelectionModel model = gajiTable.getSelectionModel();
        model.setSelectionInterval(rowNumber, rowNumber);
   
        klikKananTable(evt);
    }//GEN-LAST:event_gajiTableMouseReleased

    private void jScrollPane2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane2MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane2MouseReleased

    private void gajiTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gajiTableKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if(gajiTable.getSelectedRow() == (gajiTable.getRowCount()-1)) {
                if(gajiTable.getSelectedColumn()==0) {
                    gajiDefaultTableModel.insertRow(gajiDefaultTableModel.getRowCount(), new Object[] {});
                    gajiTable.changeSelection(gajiTable.getSelectedRow(), 0, false, false);
                }else {
                    gajiTable.changeSelection(gajiTable.getSelectedRow()-1, gajiTable.getSelectedColumn()+1,false,false);
                }
            }
        }else {
            if(gajiTable.getSelectedColumn()== (gajiTable.getColumnCount()-1)) {
                gajiTable.changeSelection(gajiTable.getSelectedRow(),0,false,false);
            }else {
                gajiTable.setColumnSelectionInterval(gajiTable.getSelectedColumn()+1, gajiTable.getSelectedColumn()+1);
                gajiTable.setRowSelectionInterval(gajiTable.getSelectedRow()-1, gajiTable.getSelectedRow()-1);
            }
        }
    }//GEN-LAST:event_gajiTableKeyPressed

    private void gajiTablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_gajiTablePropertyChange
        // TODO add your handling code here:
        if(gajiTable.getSelectedRowCount()>0) {
            if(gajiTable.getSelectedColumn() ==0) {
                String kodePekerjaan = "";
                try{
                    kodePekerjaan = gajiTable.getValueAt(gajiTable.getSelectedRow(), 0).toString();
                }catch (Exception Ex) {}
            }
            if(!kodePekerjaan.equals("")) {
                gajiController.cariPekerjaan(kodePekerjaan);   
            }
        }
    }//GEN-LAST:event_gajiTablePropertyChange

    private void ktpTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ktpTextFieldKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()== KeyEvent.Vk_ENTER) {
            gajiController.cariKaryawan(ktpTextField);
        }
    }//GEN-LAST:event_ktpTextFieldKeyPressed

    private void tambahMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahMenuItemActionPerformed
        // TODO add your handling code here:
        gajiController.tampilkanFormLihatPekerjaan();
    }//GEN-LAST:event_tambahMenuItemActionPerformed

    private void hapusMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusMenuItemActionPerformed
        // TODO add your handling code here:
        if(gajiTable.getSelectedRowCount() > 0) {
            gajiDefaultTableModel.removeRow(
            gajiTable.getSelectedRow());
        }
    }//GEN-LAST:event_hapusMenuItemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable gajiTable;
    private javax.swing.JButton hapusButton;
    private javax.swing.JMenuItem hapusMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField ktpTextField;
    private javax.swing.JButton lihatButton;
    private javax.swing.JTextField namaTextField;
    private javax.swing.JPopupMenu pekerjaanPopupMenu;
    private javax.swing.JTextField ruangTextField;
    private javax.swing.JButton simpanButton;
    private javax.swing.JMenuItem tambahMenuItem;
    // End of variables declaration//GEN-END:variables
}
